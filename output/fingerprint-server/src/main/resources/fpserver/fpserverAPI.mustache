//
//  Copyright 2016 Fingerprint Digital, Inc. All rights reserved.
//

package com.fingerprintplay.v4.{{apiName}};

import com.amazonaws.util.json.JSONException;
import com.amazonaws.util.json.JSONObject;

{{#atLeastOneModel}}import com.fingerprintplay.v4.{{apiName}}.models.*;

{{/atLeastOneModel}}
import com.fingerprintplay.v4support.V3Mapper;

import javax.ws.rs.core.Context;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import javax.ws.rs.*;

import java.util.List;

@Path("/{{apiName}}/{{baseName}}")
{{#operations}}
public class {{classname}}  {

{{#operation}}
    @{{httpMethod}}
    {{#subresourceOperation}}@Path("{{path}}"){{/subresourceOperation}}
    {{#hasBodyParam}}
    @Consumes({ "application/json" })
    {{/hasBodyParam}}
    @Produces({ "application/json" })
    public Response {{nickname}}In({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}, {{/allParams}}@Context SecurityContext securityContext) throws NotFoundException 
    {
    	// Argument validation, if any, done here.  Then, run is called.
    	try {
	        return {{nickname}}({{#allParams}}{{#isFile}}inputStream, fileDetail{{/isFile}}{{^isFile}}{{paramName}}{{/isFile}},{{/allParams}}securityContext);
	    } catch (JSONException jsonException) {
	    	throw new NotFoundException();
	    }
    }
    
{{/operation}}
    {{#operation}}
    public Response {{nickname}}({{#allParams}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{>serviceFormParams}}, {{/allParams}}SecurityContext securityContext) throws NotFoundException, JSONException
    {
        JSONObject data = new JSONObject();    
	    {{#queryParams}}
	    if ({{paramName}} != null) {
	    	data.put("{{paramName}}", {{paramName}});
	    }
	    {{/queryParams}}
	    {{#formParams}}
	    if ({{paramName}} != null) {
	    	data.put("{{paramName}}", {{paramName}});
	    }
	    {{/formParams}}
	    {{#bodyParams}}
	    data.put("data", new JSONObject({{paramName}}.toString()));
	    {{/bodyParams}}
		String path = "/{{baseName}}";
	    {{#pathParams}}
	    path += "/" + {{paramName}};
	    {{/pathParams}}
        return V3Mapper.post(path, data);
    }
    
    {{/operation}}
}
{{/operations}}
