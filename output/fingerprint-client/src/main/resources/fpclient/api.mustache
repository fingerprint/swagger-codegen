/**
*
* Copyright 2016 Fingerprint Digital, Inc. All rights reserved.
*
* Do not edit this file by hand or your changes will be lost next time it is generated.
*
* Generated at: {{generatedDate}}
* Generated by: {{generatorClass}}
*
*/

var {{classname}}API = (function() {

    var funcs = {};
	var bLog = false;

    function addParam(s, n, v, bQuery)
    {
    	var connector = "";
    	if (bQuery) {
    		connector = (url.indexOf("?") == -1) ? "?" : "&";
    	} else if (s.length > 0) {
    		connector = "&";
    	}
		return s + connector + n + "=" + encodeURIComponent(v);    		
    }
    
    function setCallbacks(request, nickname, callbacks)
    {
        request.success = function(result, status, msg) {
        	if (bLog) {
	            console.log(nickname + " success " + result);
	        }
            if (callbacks && callbacks.success) {
                callbacks.success(result);
            }
        };

        request.error = function(request, status, msg) {
        	if (bLog) {
	            console.log(nickname + " error " + result);
	        }
            if (callbacks && callbacks.error) {
                callbacks.error(msg);
            }
        };

        request.complete = function() {
        	if (bLog) {
	            console.log(nickname + " complete");
	        }
            if (callbacks && callbacks.complete) {
                callbacks.complete();
            }
        };
    }

    {{#operations}}
    {{#operation}}
    funcs.{{nickname}} = function({{#allParams}}{{^required}}opt_{{/required}}{{paramName}}, {{/allParams}}callbacks) {

		console.log("calling WebAPI {{nickname}}"{{#allParams}} + ", " + 
			JSON.stringify({{^required}}opt_{{/required}}{{paramName}}){{/allParams}});
		
        var request = new HttpRequest();
        setCallbacks(request, "{{nickname}}", callbacks);

        var url = Utils.getServer() + '/api/v4/{{apiName2}}{{path}}'{{#pathParams}}
            .replace('{' + '{{baseName}}' + '}', String({{^required}}opt_{{/required}}{{paramName}})){{/pathParams}};

    {{#hasHeaderParams}}
    {{#headerParams}}
    {{^required}}
        if ({{^required}}opt_{{/required}}{{paramName}} !== undefined) {
            request.setRequestHeader('{{baseName}}', {{^required}}opt_{{/required}}{{paramName}});
        }
    {{/required}}
    {{#required}}
        request.setRequestHeader('{{baseName}}', {{^required}}opt_{{/required}}{{paramName}});
    {{/required}}
    {{/headerParams}}
    {{/hasHeaderParams}}
    {{#hasQueryParams}}
    {{#queryParams}}
    {{^required}}
        if ({{^required}}opt_{{/required}}{{paramName}} !== undefined) {
            url = addParam(url, '{{baseName}}', {{^required}}opt_{{/required}}{{paramName}}, "?");
        }
    {{/required}}
    {{#required}}
        url = addParam(url, '{{baseName}}', {{^required}}opt_{{/required}}{{paramName}}, "?");
    {{/required}}
    {{/queryParams}}

    {{/hasQueryParams}}
    {{#hasBodyParam}}
    {{#bodyParams}}
    {{^required}}
        if ({{^required}}opt_{{/required}}{{paramName}} !== undefined) {
	        request.setRequestHeader("Content-Type", "application/json");
            request.data = JSON.stringify({{^required}}opt_{{/required}}{{paramName}});
        }
    {{/required}}
    {{#required}}
		request.setRequestHeader("Content-Type", "application/json");
        request.data = JSON.stringify({{^required}}opt_{{/required}}{{paramName}});
    {{/required}}
    {{/bodyParams}}
    {{/hasBodyParam}}   
    {{#hasFormParams}}
	    request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    	var formData = "";
    {{#formParams}}
    {{^required}}
        if ({{^required}}opt_{{/required}}{{paramName}} !== undefined) {
            formData = addParam(formData, '{{baseName}}', {{^required}}opt_{{/required}}{{paramName}}, "");
        }
    {{/required}}
    {{#required}}
        formData = addParam(formData, '{{baseName}}', {{^required}}opt_{{/required}}{{paramName}}, "");
    {{/required}}
    {{/formParams}}
    	request.data = formData;
    {{/hasFormParams}}    
        request.method = '{{httpMethod}}';
        request.url = url;
        request.send();
        return request;
    };

    {{/operation}}
    {{/operations}}
    return funcs;
}());